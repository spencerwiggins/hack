//@flow
import logLevel from '../helpers/logLevel';

const logLevels = {
  fatal: 60,
  error: 50,
  warn: 40,
  info: 30,
  debug: 20,
  trace: 10,
};

export default function buildLogger({name, appProperties}: {name: string, appProperties: AppProperties<CommonPropList>}) {
  const env = appProperties.get('env') || "development";
  const configLogLevel = appProperties.get('logger.level');
  const level = (configLogLevel && configLogLevel !== 'env') ? configLogLevel : logLevel(env);
  const levelNum = logLevels[level];

  return Object.keys(logLevels).reduce((logger, key) => {
    logger[key] = (...messages) => {
      if (logLevels[key] >= levelNum) {
        // eslint-disable-next-line no-console
        console.log(`[${key.toUpperCase()}: ${name}]`, ...messages);
      }
    };
    return logger;
  }, {});
}
