// @flow
import ss from 'simple-statistics';
import _ from 'lodash';

export default function selectTopOutliers(inputResults: Array<SearchResult<*>>): Array<SearchResult<*>> {

  const sortedScores = _.reverse(inputResults.map(result => result.score));

  const q25 = ss.quantileSorted(sortedScores, 0.25);
  const q75 = ss.quantileSorted(sortedScores, 0.75);
  const iqr = q75 - q25;
  const maxScore = sortedScores[sortedScores.length - 1];

  let topResults;

  if (maxScore > 1.5 * iqr + q75) {
    // get the outliers, anything above 1.5(iqr)+q75
    topResults = inputResults
      .filter(result => result.score > 1.5 * iqr + q75);
  } else {
    // get the larger of the first 5 items or the top quartile
    let idx = Math.ceil(inputResults.length * 0.25);
    topResults = inputResults.slice(0, Math.max(idx, 5));
  }

  return topResults;
}
