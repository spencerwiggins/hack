//@flow
import fs from 'fs';
import path from 'path';
import _ from 'lodash';

// $FlowFixMe not sure why this is erroring, but flow can't find the "module" module.
import Module from 'module';

function resolveConfigs(rootDir: string, src: string, type: string): Array<string> {
  const paths = [
    path.join(rootDir, src, `${type}.json`),
    path.join(rootDir, src, `${type}.local.js`)
  ].filter(src => fs.existsSync(src));

  if (paths.length === 0) {
    // if we didn't find any config files, look for the files in the parent directory
    const parent = path.join(src, '..');
    // but stop traversing when we reach the root of src
    if (parent === '.') {
      return [];
    } else {
      return resolveConfigs(rootDir, parent, type);
    }
  } else {
    return paths;
  }
}

const PATH_RX = /^[\w-]+\/lib\/server/;
export default function mergeLoopbackConfig(sources: Array<string>, context: string, type: 'datasources'|'model-config') {
  const rootDir = Module._nodeModulePaths(context)
    .filter(src => fs.existsSync(src))[0];

  const configs = _.chain(sources)
    .filter(src => PATH_RX.test(src))
    .map(src => resolveConfigs(rootDir, src, type))
    .flatten()
    .map(src => {
      // If we don't do require.resolve first, flow bombs with error "The parameter passed to
      // require() must be a literal string"
      const file = require.resolve(src);
      return require(file);
    })
    .value();

    configs.unshift({});

    return _.merge.apply(null, configs);
}
