{"version":3,"sources":["helpers/setupLoopbackRoles.js"],"names":["global","_babelPolyfill","require","server","roles","options","logger","info","msg","console","log","memberModelName","roleName","models","Role","findOrCreate","where","name","role","created","usernames","username","Member","registry","getModel","findOne","member","roleData","principalType","RoleMapping","USER","principalId","id","principals","getAsync","length","create","setupLoopbackRoles"],"mappings":";;;;;;;;;;AACA;AACA,IAAI,CAACA,OAAOC,cAAZ,EAA4B;AAC1BC,UAAQ,gBAAR;AACD;;;uDAOc,iBAAkCC,MAAlC,EAAkDC,KAAlD;AAAA,QAAwFC,OAAxF,uEAAyG,EAAzG;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,8BAITA,OAJS,CAEXC,MAFW,EAEXA,MAFW,mCAEF,EAAEC,MAAM,cAACC,GAAD;AAAA,uBAASC,QAAQC,GAAR,CAAYF,GAAZ,CAAT;AAAA,eAAR,EAFE,4CAITH,OAJS,CAGXM,eAHW,EAGXA,eAHW,yCAGO,QAHP;AAKb;;AALa,kDAOQP,KAPR;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOJQ,oBAPI;AAAA;AAAA,mBAQmBT,OAAOU,MAAP,CAAcC,IAAd,CAAmBC,YAAnB,CAAgC,EAAEC,OAAO,EAAEC,MAAML,QAAR,EAAT,EAAhC,EAA+D,EAAEK,MAAML,QAAR,EAA/D,CARnB;;AAAA;AAAA;AAAA;AAQJM,gBARI;AAQEC,mBARF;;;AAUX,gBAAIA,OAAJ,EAAa;AACXb,qBAAOC,IAAP,cAAuBK,QAAvB;AACD;;AAEKQ,qBAdK,GAcOhB,MAAMQ,QAAN,CAdP;AAAA;AAAA;AAAA;AAAA;AAAA,wBAgBUQ,SAhBV;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBFC,oBAhBE;AAiBHC,kBAjBG,GAiBMnB,OAAOoB,QAAP,CAAgBC,QAAhB,CAAyBb,eAAzB,CAjBN;AAAA;AAAA,mBAkBYW,OAAOG,OAAP,CAAe,EAAET,OAAO,EAAEK,kBAAF,EAAT,EAAf,CAlBZ;;AAAA;AAkBHK,kBAlBG;;AAAA,gBAmBJA,MAnBI;AAAA;AAAA;AAAA;;AAoBPpB,mBAAOC,IAAP,0BAAmCc,QAAnC;AApBO;;AAAA;AAwBHM,oBAxBG,GAwBQ;AACfC,6BAAezB,OAAOU,MAAP,CAAcgB,WAAd,CAA0BC,IAD1B;AAEfC,2BAAaL,OAAOM;AAFL,aAxBR;AAAA;AAAA,mBA6BgBd,KAAKe,UAAL,CAAgBC,QAAhB,CAAyB,EAAElB,OAAOW,QAAT,EAAzB,CA7BhB;;AAAA;AA6BHM,sBA7BG;;AAAA,gBA+BJA,WAAWE,MA/BP;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAgCDjB,KAAKe,UAAL,CAAgBG,MAAhB,CAAuBT,QAAvB,CAhCC;;AAAA;AAiCPrB,mBAAOC,IAAP,gCAAyCmB,OAAOL,QAAhD,YAA+DH,KAAKD,IAApE;AAjCO;AAAA;;AAAA;AAmCPX,mBAAOC,IAAP,CAAec,QAAf,iCAAmDT,QAAnD;;AAnCO;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;WAAeyB,kB;;;;SAAAA,kB","file":"helpers/setupLoopbackRoles.js","sourcesContent":["//@flow\n/* eslint-disable no-console */\nif (!global._babelPolyfill) {\n  require('babel-polyfill');\n}\n\ndeclare type Options = {\n  logger?: Object,\n  memberModelName?: string\n}\n\nexport default async function setupLoopbackRoles(server: Object, roles: {[key:string]: Array<string>}, options: Options={}) {\n  const {\n    logger = { info: (msg) => console.log(msg) },\n    memberModelName = 'Member',\n  } = options;\n  // enable authentication\n\n  for (let roleName in roles) {\n    const [role, created] = await server.models.Role.findOrCreate({ where: { name: roleName } }, { name: roleName });\n\n    if (created) {\n      logger.info(`Created ${roleName} role`);\n    }\n\n    const usernames = roles[roleName];\n\n    for (let username of usernames) {\n      const Member = server.registry.getModel(memberModelName);\n      const member = await Member.findOne({ where: { username }});\n      if (!member) {\n        logger.info(`Could not find user ${username} when attempting to promote admins`);\n        continue;\n      }\n\n      const roleData = {\n        principalType: server.models.RoleMapping.USER,\n        principalId: member.id\n      };\n\n      const principals = await role.principals.getAsync({ where: roleData });\n\n      if (!principals.length) {\n        await role.principals.create(roleData);\n        logger.info(`Created role mapping for: ${member.username} -> ${role.name}`);\n      } else {\n        logger.info(`${username} was already a member of ${roleName}`);\n      }\n    }\n  }\n};\n"],"sourceRoot":"/source/"}