{"version":3,"sources":["helpers/mergeLoopbackConfig.js"],"names":["mergeLoopbackConfig","resolveConfigs","rootDir","src","type","paths","join","filter","existsSync","length","parent","PATH_RX","sources","context","_nodeModulePaths","configs","chain","test","map","flatten","file","require","resolve","value","unshift","merge","apply"],"mappings":";;;;;kBA6BwBA,mB;;AA5BxB;;;;AACA;;;;AACA;;;;AAGA;;;;;;AAEA,SAASC,cAAT,CAAwBC,OAAxB,EAAyCC,GAAzC,EAAsDC,IAAtD,EAAmF;AACjF,MAAMC,QAAQ,CACZ,eAAKC,IAAL,CAAUJ,OAAV,EAAmBC,GAAnB,EAA2BC,IAA3B,WADY,EAEZ,eAAKE,IAAL,CAAUJ,OAAV,EAAmBC,GAAnB,EAA2BC,IAA3B,eAFY,EAGZG,MAHY,CAGL;AAAA,WAAO,aAAGC,UAAH,CAAcL,GAAd,CAAP;AAAA,GAHK,CAAd;;AAKA,MAAIE,MAAMI,MAAN,KAAiB,CAArB,EAAwB;AACtB;AACA,QAAMC,SAAS,eAAKJ,IAAL,CAAUH,GAAV,EAAe,IAAf,CAAf;AACA;AACA,QAAIO,WAAW,GAAf,EAAoB;AAClB,aAAO,EAAP;AACD,KAFD,MAEO;AACL,aAAOT,eAAeC,OAAf,EAAwBQ,MAAxB,EAAgCN,IAAhC,CAAP;AACD;AACF,GATD,MASO;AACL,WAAOC,KAAP;AACD;AACF;;AArBD;;;AAuBA,IAAMM,UAAU,sBAAhB;AACe,SAASX,mBAAT,CAA6BY,OAA7B,EAAqDC,OAArD,EAAsET,IAAtE,EAA0G;AACvH,MAAMF,UAAU,iBAAOY,gBAAP,CAAwBD,OAAxB,EACbN,MADa,CACN;AAAA,WAAO,aAAGC,UAAH,CAAcL,GAAd,CAAP;AAAA,GADM,EACqB,CADrB,CAAhB;;AAGA,MAAMY,UAAU,iBAAEC,KAAF,CAAQJ,OAAR,EACbL,MADa,CACN;AAAA,WAAOI,QAAQM,IAAR,CAAad,GAAb,CAAP;AAAA,GADM,EAEbe,GAFa,CAET;AAAA,WAAOjB,eAAeC,OAAf,EAAwBC,GAAxB,EAA6BC,IAA7B,CAAP;AAAA,GAFS,EAGbe,OAHa,GAIbD,GAJa,CAIT,eAAO;AACV;AACA;AACA,QAAME,OAAOC,QAAQC,OAAR,CAAgBnB,GAAhB,CAAb;AACA,WAAOkB,QAAQD,IAAR,CAAP;AACD,GATa,EAUbG,KAVa,EAAhB;;AAYER,UAAQS,OAAR,CAAgB,EAAhB;;AAEA,SAAO,iBAAEC,KAAF,CAAQC,KAAR,CAAc,IAAd,EAAoBX,OAApB,CAAP;AACH","file":"helpers/mergeLoopbackConfig.js","sourcesContent":["//@flow\nimport fs from 'fs';\nimport path from 'path';\nimport _ from 'lodash';\n\n// $FlowFixMe not sure why this is erroring, but flow can't find the \"module\" module.\nimport Module from 'module';\n\nfunction resolveConfigs(rootDir: string, src: string, type: string): Array<string> {\n  const paths = [\n    path.join(rootDir, src, `${type}.json`),\n    path.join(rootDir, src, `${type}.local.js`)\n  ].filter(src => fs.existsSync(src));\n\n  if (paths.length === 0) {\n    // if we didn't find any config files, look for the files in the parent directory\n    const parent = path.join(src, '..');\n    // but stop traversing when we reach the root of src\n    if (parent === '.') {\n      return [];\n    } else {\n      return resolveConfigs(rootDir, parent, type);\n    }\n  } else {\n    return paths;\n  }\n}\n\nconst PATH_RX = /^[\\w-]+\\/lib\\/server/;\nexport default function mergeLoopbackConfig(sources: Array<string>, context: string, type: 'datasources'|'model-config') {\n  const rootDir = Module._nodeModulePaths(context)\n    .filter(src => fs.existsSync(src))[0];\n\n  const configs = _.chain(sources)\n    .filter(src => PATH_RX.test(src))\n    .map(src => resolveConfigs(rootDir, src, type))\n    .flatten()\n    .map(src => {\n      // If we don't do require.resolve first, flow bombs with error \"The parameter passed to\n      // require() must be a literal string\"\n      const file = require.resolve(src);\n      return require(file);\n    })\n    .value();\n\n    configs.unshift({});\n\n    return _.merge.apply(null, configs);\n}\n"],"sourceRoot":"/source/"}