{"version":3,"sources":["buildLogger/buildLogger.client.js"],"names":["buildLogger","logLevels","fatal","error","warn","info","debug","trace","name","appProperties","env","get","configLogLevel","level","levelNum","Object","keys","reduce","logger","key","messages","log","toUpperCase"],"mappings":";;;;;kBAYwBA,W;;AAXxB;;;;;;AAEA,IAAMC,YAAY;AAChBC,SAAO,EADS;AAEhBC,SAAO,EAFS;AAGhBC,QAAM,EAHU;AAIhBC,QAAM,EAJU;AAKhBC,SAAO,EALS;AAMhBC,SAAO;AANS,CAAlB;AASe,SAASP,WAAT,OAA0G;AAAA,MAApFQ,IAAoF,QAApFA,IAAoF;AAAA,MAA9EC,aAA8E,QAA9EA,aAA8E;;AACvH,MAAMC,MAAMD,cAAcE,GAAd,CAAkB,KAAlB,KAA4B,aAAxC;AACA,MAAMC,iBAAiBH,cAAcE,GAAd,CAAkB,cAAlB,CAAvB;AACA,MAAME,QAASD,kBAAkBA,mBAAmB,KAAtC,GAA+CA,cAA/C,GAAgE,wBAASF,GAAT,CAA9E;AACA,MAAMI,WAAWb,UAAUY,KAAV,CAAjB;;AAEA,SAAOE,OAAOC,IAAP,CAAYf,SAAZ,EAAuBgB,MAAvB,CAA8B,UAACC,MAAD,EAASC,GAAT,EAAiB;AACpDD,WAAOC,GAAP,IAAc,YAAiB;AAAA,wCAAbC,QAAa;AAAbA,gBAAa;AAAA;;AAC7B,UAAInB,UAAUkB,GAAV,KAAkBL,QAAtB,EAAgC;AAAA;;AAC9B;AACA,6BAAQO,GAAR,wBAAgBF,IAAIG,WAAJ,EAAhB,UAAsCd,IAAtC,eAAkDY,QAAlD;AACD;AACF,KALD;AAMA,WAAOF,MAAP;AACD,GARM,EAQJ,EARI,CAAP;AASD","file":"buildLogger/buildLogger.client.js","sourcesContent":["//@flow\nimport logLevel from '../helpers/logLevel';\n\nconst logLevels = {\n  fatal: 60,\n  error: 50,\n  warn: 40,\n  info: 30,\n  debug: 20,\n  trace: 10,\n};\n\nexport default function buildLogger({name, appProperties}: {name: string, appProperties: AppProperties<CommonPropList>}) {\n  const env = appProperties.get('env') || \"development\";\n  const configLogLevel = appProperties.get('logger.level');\n  const level = (configLogLevel && configLogLevel !== 'env') ? configLogLevel : logLevel(env);\n  const levelNum = logLevels[level];\n\n  return Object.keys(logLevels).reduce((logger, key) => {\n    logger[key] = (...messages) => {\n      if (logLevels[key] >= levelNum) {\n        // eslint-disable-next-line no-console\n        console.log(`[${key.toUpperCase()}: ${name}]`, ...messages);\n      }\n    };\n    return logger;\n  }, {});\n}\n"],"sourceRoot":"/source/"}