'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _convict = require('convict');

var _convict2 = _interopRequireDefault(_convict);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_convict2.default.addFormat({
  name: 'boolean',
  validate: function validate(val) {
    var downcased = (val || '').toLowerCase();
    if (!(downcased === '' || downcased === 'true' || downcased === 'false' || downcased === '1' || downcased === '0')) {
      throw new Error('A boolean must be one of: true, false, 0, 1');
    }
  }
});
var defaultSchema = {
  env: {
    doc: 'The current NODE_ENV',
    format: ['development', 'test', 'production'],
    default: 'development',
    env: 'NODE_ENV'
  },

  logger: {
    level: {
      doc: 'The level to log at',
      format: ['trace', 'debug', 'info', 'warn', 'error', 'env'],
      default: 'env',
      env: 'LOG_LEVEL'
    }
  }
};

function buildAppProperties() {
  var schema = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var config = (0, _convict2.default)(_extends({}, defaultSchema, schema));

  config.validate({ strict: true });

  return config;
}

exports.default = buildAppProperties;
//# sourceMappingURL=buildAppProperties.js.map
