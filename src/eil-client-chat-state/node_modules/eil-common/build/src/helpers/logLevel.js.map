{"version":3,"sources":["eil-common/src/helpers/logLevel.js"],"names":["logLevel","defaultLevels","production","development","test","default","env","options","levels","defaultLevel","_levels"],"mappings":";;;;;;;;kBAkBwBA,Q;AAhBxB,IAAMC,gBAAgB;AACpBC,cAAY,MADQ;AAEpBC,eAAa,OAFO;AAGpBC,QAAM,MAHc;AAIpBC,WAAS;AAJW,CAAtB;;AAOA;;;;;;;;;AASe,SAASL,QAAT,CAAkBM,GAAlB,EAAkH;AAAA,MAAnFC,OAAmF,uEAAZ,EAAY;AAAA,wBAI3HA,OAJ2H,CAE7HC,MAF6H;AAAA,MAE7HA,MAF6H,mCAEpH,EAFoH;AAAA,8BAI3HD,OAJ2H,CAG7HE,YAH6H;AAAA,MAG7HA,YAH6H,yCAG9GR,cAAcI,OAHgG;;;AAM/H,MAAMK,uBACDT,aADC,EAEDO,MAFC,CAAN;;AAKA,SAAOE,QAAQJ,GAAR,KAAgBG,YAAvB;AACD","file":"eil-common/src/helpers/logLevel.js","sourcesContent":["//@flow\n\nconst defaultLevels = {\n  production: \"warn\",\n  development: \"debug\",\n  test: \"warn\",\n  default: \"info\",\n};\n\n/**\n * Return a logLevel for the given environment.\n * @param  {string} env          A string representing the enviroment to retrieve the log level for\n * @param  {Object} options\n *         * levels - a map of new or overridden environment -> logLevel\n *         * defaultLevel (info) -\n * @param  {[type]} defaultLevel Changes the default logLevel for any non-specified environments (default: info)\n * @return {string}              The log level for the environment\n */\nexport default function logLevel(env: string, options: { levels?: {[key: string]: string }, defaultLevel?: string} = {}): string {\n  const {\n    levels = {},\n    defaultLevel = defaultLevels.default,\n  } = options;\n\n  const _levels:{[key:string]: string} = {\n    ...defaultLevels,\n    ...levels\n  };\n\n  return _levels[env] || defaultLevel;\n}\n"],"sourceRoot":"/source/"}