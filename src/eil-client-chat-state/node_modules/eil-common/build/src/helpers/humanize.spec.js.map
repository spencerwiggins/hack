{"version":3,"sources":["eil-common/src/helpers/humanize.spec.js"],"names":["expect","use","describe","context","input","it","result","to","equal"],"mappings":";;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,SAAS,eAAKA,MAApB;AACA,eAAKC,GAAL;AACA,eAAKA,GAAL;;AAEAC,SAAS,UAAT,EAAqB,YAAW;;AAE9BC,UAAQ,2BAAR,EAAqC,YAAY;AAC/C,QAAMC,QAAQ,eAAd;;AAEAC,OAAG,mCAAH,EAAwC,YAAY;AAClD,UAAMC,SAAS,wBAASF,KAAT,CAAf;;AAEAJ,aAAOM,MAAP,EAAeC,EAAf,CAAkBC,KAAlB,CAAwB,kBAAxB;AACD,KAJD;AAKD,GARD;;AAUAL,UAAQ,6BAAR,EAAuC,YAAY;AACjD,QAAMC,QAAQ,kBAAd;;AAEAC,OAAG,mCAAH,EAAwC,YAAY;AAClD,UAAMC,SAAS,wBAASF,KAAT,CAAf;;AAEAJ,aAAOM,MAAP,EAAeC,EAAf,CAAkBC,KAAlB,CAAwB,kBAAxB;AACD,KAJD;AAKD,GARD;;AAUAL,UAAQ,0BAAR,EAAoC,YAAY;AAC9C,QAAMC,QAAQ,gBAAd;;AAEAC,OAAG,+BAAH,EAAoC,YAAW;AAC7C,UAAMC,SAAS,wBAASF,KAAT,CAAf;;AAEAJ,aAAOM,MAAP,EAAeC,EAAf,CAAkBC,KAAlB,CAAwBJ,KAAxB;AACD,KAJD;AAKD,GARD;AASD,CA/BD","file":"eil-common/src/helpers/humanize.spec.js","sourcesContent":["//@flow\nimport chai from 'chai';\nimport chaiAsPromised from \"chai-as-promised\";\nimport sinonChai from \"sinon-chai\";\nimport humanize from './humanize';\n\nconst expect = chai.expect;\nchai.use(sinonChai);\nchai.use(chaiAsPromised);\n\ndescribe('humanize', function() {\n\n  context('given a camel case string', function () {\n    const input = 'iAmCamelCased';\n\n    it('should return a humanized version', function () {\n      const result = humanize(input);\n\n      expect(result).to.equal('i am camel cased');\n    });\n  });\n\n  context('given an underscored string', function () {\n    const input = 'i_am_underscored';\n\n    it('should return a humanized version', function () {\n      const result = humanize(input);\n\n      expect(result).to.equal('i am underscored');\n    });\n  });\n\n  context('given a humanized string', function () {\n    const input = 'I am humanized';\n\n    it('should return the same string', function() {\n      const result = humanize(input);\n\n      expect(result).to.equal(input);\n    });\n  });\n});\n"],"sourceRoot":"/source/"}