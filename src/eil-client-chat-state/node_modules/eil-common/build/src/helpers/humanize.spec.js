"use strict";

var _chai = require("chai");

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require("chai-as-promised");

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _sinonChai = require("sinon-chai");

var _sinonChai2 = _interopRequireDefault(_sinonChai);

var _humanize = require("./humanize");

var _humanize2 = _interopRequireDefault(_humanize);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var expect = _chai2.default.expect;
_chai2.default.use(_sinonChai2.default);
_chai2.default.use(_chaiAsPromised2.default);

describe('humanize', function () {

  context('given a camel case string', function () {
    var input = 'iAmCamelCased';

    it('should return a humanized version', function () {
      var result = (0, _humanize2.default)(input);

      expect(result).to.equal('i am camel cased');
    });
  });

  context('given an underscored string', function () {
    var input = 'i_am_underscored';

    it('should return a humanized version', function () {
      var result = (0, _humanize2.default)(input);

      expect(result).to.equal('i am underscored');
    });
  });

  context('given a humanized string', function () {
    var input = 'I am humanized';

    it('should return the same string', function () {
      var result = (0, _humanize2.default)(input);

      expect(result).to.equal(input);
    });
  });
});
//# sourceMappingURL=humanize.spec.js.map
