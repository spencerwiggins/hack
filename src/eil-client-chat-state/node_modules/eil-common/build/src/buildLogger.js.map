{"version":3,"sources":["eil-common/src/buildLogger.js"],"names":["buildLogger","name","appProperties","env","get","configLogLevel","level","streams","createLogger","src","serializers","stdSerializers"],"mappings":";;;;;kBAIwBA,W;;AAHxB;;;;AACA;;;;AAEe,SAASA,WAAT,OAA0G;AAAA,MAApFC,IAAoF,QAApFA,IAAoF;AAAA,MAA9EC,aAA8E,QAA9EA,aAA8E;;AACvH,MAAMC,MAAMD,cAAcE,GAAd,CAAkB,KAAlB,KAA4B,aAAxC;AACA,MAAMC,iBAAiBH,cAAcE,GAAd,CAAkB,cAAlB,CAAvB;AACA,MAAME,QAASD,kBAAkBA,mBAAmB,KAAtC,GAA+CA,cAA/C,GAAgE,gBAASF,GAAT,CAA9E;AACA,MAAMI,UAAU,mBAAhB;;AAEA,SAAO,iBAAOC,YAAP,CAAoB;AACzBP,cADyB;AAEzBK,gBAFyB;AAGzBG,SAAKN,QAAQ,YAHY;AAIzBO,iBAAa,iBAAOC,cAJK;AAKzBJ;AALyB,GAApB,CAAP;AAOD","file":"eil-common/src/buildLogger.js","sourcesContent":["//@flow\nimport bunyan from 'bunyan';\nimport { logLevel, logStreams } from '.';\n\nexport default function buildLogger({name, appProperties}: {name: string, appProperties: AppProperties<CommonPropList>}) {\n  const env = appProperties.get('env') || \"development\";\n  const configLogLevel = appProperties.get('logger.level');\n  const level = (configLogLevel && configLogLevel !== 'env') ? configLogLevel : logLevel(env);\n  const streams = logStreams();\n\n  return bunyan.createLogger({\n    name,\n    level,\n    src: env !== 'production',\n    serializers: bunyan.stdSerializers,\n    streams,\n  });\n}\n"],"sourceRoot":"/source/"}