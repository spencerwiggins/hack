{"version":3,"sources":["eil-common/src/EventBroker.js"],"names":["EventBroker","receivers","suspendedReceivers","suspendedHandlers","receiver","push","index","indexOf","splice","concat","skipReplay","fn","selector","binder","map","filter","forEach"],"mappings":";;;;;;;;;;IACMA,W;AAKJ,yBAAc;AAAA;;AACZ,SAAKC,SAAL,GAAiB,EAAjB;AACA,SAAKC,kBAAL,GAA0B,EAA1B;AACA,SAAKC,iBAAL,GAAyB,EAAzB;AACD;;;;gCAEWC,Q,EAAiC;AAC3C,WAAKH,SAAL,CAAeI,IAAf,CAAoBD,QAApB;AACD;;;mCAEcA,Q,EAAiC;AAC9C,UAAME,QAAQ,KAAKL,SAAL,CAAeM,OAAf,CAAuBH,QAAvB,CAAd;AACA,UAAIE,SAAS,CAAb,EAAgB;AACd,aAAKL,SAAL,CAAeO,MAAf,CAAsBF,KAAtB,EAA6B,CAA7B;AACD;AACF;;;yCAEoB;AACnB,WAAKL,SAAL,GAAiB,EAAjB;AACD;;;8CAEyB;AACxB,WAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBO,MAAxB,CAA+B,KAAKR,SAApC,CAA1B;AACA,WAAKA,SAAL,GAAiB,EAAjB;AACD;;;yCAEiE;AAAA,qFAAJ,EAAI;AAAA,UAA7CS,UAA6C,QAA7CA,UAA6C;;AAChE,UAAI,CAACA,UAAL,EAAiB;AAAA;AAAA;AAAA;;AAAA;AACf,+BAAiB,KAAKP,iBAAtB,8HAAyC;AAAA,gBAA9BQ,GAA8B;;AACvCA;AACD;AAHc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIhB;;AAED,WAAKV,SAAL,GAAiB,KAAKA,SAAL,CAAeQ,MAAf,CAAsB,KAAKP,kBAA3B,CAAjB;AACA,WAAKA,kBAAL,GAA0B,EAA1B;AACA,WAAKC,iBAAL,GAAyB,EAAzB;AACD;;;6BAEWS,Q,EAAkDC,M,EAAqC;AAAA;;AACjG,WAAKZ,SAAL,CACGa,GADH,CACOF,QADP,EAEGG,MAFH,CAEU;AAAA,eAAM,CAAC,CAACJ,EAAR;AAAA,OAFV,EAGGG,GAHH,CAGOD,MAHP,EAIGG,OAJH,CAIW;AAAA,eAAML,IAAN;AAAA,OAJX;;AAMA,WAAKT,kBAAL,CACGY,GADH,CACOF,QADP,EAEGG,MAFH,CAEU;AAAA,eAAM,CAAC,CAACJ,EAAR;AAAA,OAFV,EAGGG,GAHH,CAGOD,MAHP,EAIGG,OAJH,CAIW;AAAA,eAAM,MAAKb,iBAAL,CAAuBE,IAAvB,CAA4BM,EAA5B,CAAN;AAAA,OAJX;AAKD;;;;;;kBAGYX,W","file":"eil-common/src/EventBroker.js","sourcesContent":["//@flow\nclass EventBroker<ReceiverShape: Object> {\n  receivers: Array<$Shape<ReceiverShape>>;\n  suspendedReceivers: Array<$Shape<ReceiverShape>>;\n  suspendedHandlers: Array<() => void>;\n\n  constructor() {\n    this.receivers = [];\n    this.suspendedReceivers = [];\n    this.suspendedHandlers = [];\n  }\n\n  addReceiver(receiver: $Shape<ReceiverShape>) {\n    this.receivers.push(receiver);\n  }\n\n  removeReceiver(receiver: $Shape<ReceiverShape>) {\n    const index = this.receivers.indexOf(receiver);\n    if (index >= 0) {\n      this.receivers.splice(index, 1);\n    }\n  }\n\n  removeAllReceivers() {\n    this.receivers = [];\n  }\n\n  suspendCurrentReceivers() {\n    this.suspendedReceivers = this.suspendedReceivers.concat(this.receivers);\n    this.receivers = [];\n  }\n\n  resumeAllReceivers({ skipReplay }: { skipReplay?: boolean } = {}) {\n    if (!skipReplay) {\n      for (const fn of this.suspendedHandlers) {\n        fn();\n      }\n    }\n\n    this.receivers = this.receivers.concat(this.suspendedReceivers);\n    this.suspendedReceivers = [];\n    this.suspendedHandlers = [];\n  }\n\n  _trigger<T>(selector: (receiver: $Shape<ReceiverShape>) => T, binder: (fn: T) => () => void): void {\n    this.receivers\n      .map(selector)\n      .filter(fn => !!fn)\n      .map(binder)\n      .forEach(fn => fn());\n\n    this.suspendedReceivers\n      .map(selector)\n      .filter(fn => !!fn)\n      .map(binder)\n      .forEach(fn => this.suspendedHandlers.push(fn));\n  }\n}\n\nexport default EventBroker;\n"],"sourceRoot":"/source/"}